{"version":3,"file":"component---src-pages-index-js-ba324ab7c65ff961007a.js","mappings":"qJAuDA,IA5CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,QAWZJ,MAAAA,OAAA,EAAAA,EAAQK,OACP,uCACa,8BAASL,EAAOK,MAC3B,2BACA,qBAAGC,KAAI,6BAA8BH,MAAAA,OAA9B,EAA8BA,EAAQI,WAA7C,oC,2FCqBV,UA7DkB,SAAC,GAAwB,IAAD,EAArBT,EAAqB,EAArBA,KAAMU,EAAe,EAAfA,SACnBC,GAAY,UAAAX,EAAKG,KAAKC,oBAAV,eAAwBQ,QAAxB,QACZC,EAAQb,EAAKc,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQN,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,uBAAKK,MAAM,2CACT,uBAAKA,MAAM,+BACRJ,EAAMK,KAAI,SAAAC,GACT,IAAMP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAC9CC,EAAgBJ,EAAKI,cAE3B,OADZC,QAAQC,IAAIN,GAEE,uBAAKO,IAAKP,EAAKE,OAAOC,MACpB,2BACEhB,UAAU,eACVqB,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIX,EAAKE,OAAOC,KAAMS,SAAS,OACnC,wBAAMA,SAAS,YAAYnB,KAG/B,6BAAQO,EAAKC,YAAYY,OAE3B,+BACE,gBAAC,EAAAC,EAAD,CAAaC,MAAOX,EAAeY,IAAKhB,EAAKC,YAAYR,QACzD,qBACEwB,wBAAyB,CACvBC,OAAQlB,EAAKC,YAAYkB,aAAenB,EAAKoB,SAE/CR,SAAS","sources":["webpack://seewhatiwilldo-spa/./src/components/bio.js","webpack://seewhatiwilldo-spa/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n// import { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            facebook\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {/* <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.jpeg\"\n        width={150}\n        height={150}\n        quality={95}\n        alt=\"Profile picture\"\n      /> */}\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong>\n          <br />\n          <a href={`https://www.facebook.com/${social?.facebook}`}>Follow our page on Facebook.</a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <div class=\"row gx-4 gx-lg-5 justify-content-center\">\n        <div class=\"col-md-10 col-lg-8 col-xl-7\">\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n            const featuredImage = post.featuredImage\nconsole.log(post)\n            return (\n              <div key={post.fields.slug}>\n                <article\n                  className=\"post-preview\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h2>\n                    <small>{post.frontmatter.date}</small>\n                  </header>\n                  <section>\n                    <GatsbyImage image={featuredImage} alt={post.frontmatter.title} />\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          featuredImage {\n            childImageSharp {\n              gatsbyImageData(\n                width: 200\n                placeholder: BLURRED\n                formats: [AUTO, WEBP, AVIF]\n              )\n            }\n          }\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","name","href","facebook","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","class","map","post","frontmatter","fields","slug","featuredImage","console","log","key","itemScope","itemType","Link","to","itemProp","date","G","image","alt","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}